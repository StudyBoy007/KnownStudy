<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.UserMapper">
    <resultMap id="BaseResultMap" type="entity.User">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="age" property="age" jdbcType="INTEGER"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="avatar" property="avatar" jdbcType="VARCHAR"/>
        <result column="study_direction" property="studyDirection" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="email" property="email" jdbcType="VARCHAR"/>
        <result column="motto" property="motto" jdbcType="VARCHAR"/>
        <result column="account" property="account"/>
        <result column="degree" property="degree"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from user
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="entity.User">
        insert into user (id, username, password,
                          sex, age, address,
                          avatar, study_direction, phone,
                          email, motto, account, degree)
        values (#{id,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
                #{sex,jdbcType=VARCHAR}, #{age,jdbcType=INTEGER}, #{address,jdbcType=VARCHAR},
                #{avatar,jdbcType=VARCHAR}, #{studyDirection,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
                #{email,jdbcType=VARCHAR}, #{motto,jdbcType=VARCHAR}, #{account}, #{degree})
    </insert>
    <update id="updateByPrimaryKey" parameterType="entity.User">
        update user
        set username        = #{username,jdbcType=VARCHAR},
            password        = #{password,jdbcType=VARCHAR},
            sex             = #{sex,jdbcType=VARCHAR},
            age             = #{age,jdbcType=INTEGER},
            address         = #{address,jdbcType=VARCHAR},
            avatar          = #{avatar,jdbcType=VARCHAR},
            study_direction = #{studyDirection,jdbcType=VARCHAR},
            phone           = #{phone,jdbcType=VARCHAR},
            email           = #{email,jdbcType=VARCHAR},
            motto           = #{motto,jdbcType=VARCHAR},
            account         = #{account},
            degree          =#{degree}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id,
               username,
               password,
               sex,
               age,
               address,
               avatar,
               study_direction,
               phone,
               email,
               motto,
               account,
               degree
        from user
        where id = #{id,jdbcType=INTEGER}
    </select>

    <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String">
        select id,
               username,
               password,
               sex,
               age,
               address,
               avatar,
               study_direction,
               phone,
               email,
               motto,
               account,
               degree
        from user
        where username = #{username}
    </select>

    <!--    <select id="selectByUsernameTwo" resultMap="BaseResultMap" parameterType="java.lang.String">-->
    <!--        select id,-->
    <!--               username,-->
    <!--               password,-->
    <!--               sex,-->
    <!--               age,-->
    <!--               address,-->
    <!--               avatar,-->
    <!--               study_direction,-->
    <!--               phone,-->
    <!--               email,-->
    <!--               motto,-->
    <!--               account-->
    <!--        from user-->
    <!--        where username = #{username}-->
    <!--    </select>-->


    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               username,
               password,
               sex,
               age,
               address,
               avatar,
               study_direction,
               phone,
               email,
               motto,
               account,
               degree
        from user
    </select>

    <insert id="saveUser" parameterType="user">
        insert into user(username, password, sex, study_direction, phone, email)
        values (#{username}, #{password}, #{sex}, #{studyDirection}, #{phone}, #{email});
    </insert>


    <update id="recharge">
        update user
        set account=account + #{number}
        where id = #{uid}
    </update>


    <update id="payAccount">
        update user
        set account=account - #{number}
        where id = #{uid}
    </update>

    <select id="selectIsOrNotCollect" resultType="int">
        select count(*)
        from user_course
        where user_id = #{uid}
          and course_id = #{cid}
          and collect_status = true
    </select>


    <select id="selectCollectConnectionInUserAndCourse" resultType="int">
        select count(*)
        from user_course
        where user_id = #{uid}
          and course_id = #{cid}
    </select>


    <update id="changeCollectCourseState">
        update user_course
        set collect_status= #{state}
        where user_id = #{uid}
          and course_id = #{cid}
    </update>

    <insert id="createConnectionInUserAndCourseCollect">
        INSERT INTO user_course(user_id, course_id, collect_status)
        VALUES (#{uid}, #{cid}, true)
    </insert>

    <select id="deleteConnectionJuify" resultType="int">
        select count(*)
        from user_course
        where user_id = #{uid}
          and course_id = #{cid}
          and buy_status = true;
    </select>

    <delete id="deleteConnection">
        delete
        from user_course
        where user_id = #{uid}
          and course_id = #{cid}
    </delete>


    <update id="updateUser" parameterType="user">
        update user
        <trim prefix="set" suffixOverrides=",">
            <if test="username !=null and username !=''">
                username=#{username},
            </if>
            <if test="password !=null and password !=''">
                password=#{password},
            </if>
            <if test="sex !=null and sex !=''">
                sex=#{sex},
            </if>
            <if test="age !=null">
                age=#{age},
            </if>
            <if test="address !=null and address !='' ">
                address=#{address},
            </if>
            <if test="avatar !=null and avatar !='' ">
                avatar=#{avatar},
            </if>
            <if test="studyDirection !=null and studyDirection !='' ">
                study_direction=#{studyDirection},
            </if>
            <if test="phone !=null and phone !='' ">
                phone=#{phone},
            </if>
            <if test="email !=null and email !='' ">
                email=#{email},
            </if>
            <if test="motto !=null and motto !='' ">
                motto=#{motto},
            </if>
            <if test="account !=null">
                account=#{account},
            </if>
            <if test="degree !=null">
                degree=#{degree}
            </if>
        </trim>
        where id=#{id}
    </update>

    <insert id="insertUser" parameterType="entity.User">
        insert into user
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="username != null and username !=''">
                username,
            </if>
            <if test="password != null and password !=''">
                password,
            </if>
            <if test="sex !=null and sex !=''">
                sex,
            </if>
            <if test="age != null">
                age,
            </if>
            <if test="address != null and address !=''">
                address,
            </if>
            <if test="avatar != null and avatar !=''">
                avatar,
            </if>
            <if test="studyDirection != null and studyDirection!=''">
                study_direction,
            </if>
            <if test="phone != null and phone !=''">
                phone,
            </if>
            <if test="email != null and email !=''">
                email,
            </if>
            <if test="motto != null and motto !=''">
                motto,
            </if>
            <if test="account != null">
                account,
            </if>
            <if test="degree != null">
                degree,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id},
            </if>
            <if test="username != null and username !=''">
                #{username},
            </if>
            <if test="password != null and password !=''">
                #{password},
            </if>
            <if test="sex !=null and sex !=''">
                #{sex},
            </if>
            <if test="age != null">
                #{age},
            </if>
            <if test="address != null and address !=''">
                #{address},
            </if>
            <if test="avatar != null and avatar !=''">
                #{avatar},
            </if>
            <if test="studyDirection != null and studyDirection !=''">
                #{studyDirection},
            </if>
            <if test="phone != null and phone !=''">
                #{phone},
            </if>
            <if test="email != null and email !=''">
                #{email},
            </if>
            <if test="motto != null and motto !=''">
                #{motto},
            </if>
            <if test="account != null">
                #{account},
            </if>
            <if test="degree != null">
                #{degree},
            </if>
        </trim>
    </insert>

</mapper>