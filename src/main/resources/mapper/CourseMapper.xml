<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.CourseMapper">
    <resultMap id="BaseResultMap" type="entity.Course">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="cname" property="cname" jdbcType="VARCHAR"/>
        <!--        <result column="direction_id" property="directionId" jdbcType="INTEGER"/>-->
        <result column="isfress" property="isfress" jdbcType="INTEGER"/>
        <result column="price" property="price" jdbcType="DOUBLE"/>
        <result column="pic" property="pic" jdbcType="VARCHAR"/>
        <result column="course_path" property="course_path" jdbcType="VARCHAR"/>
        <result column="course_status" property="courseStatus" jdbcType="INTEGER"/>
        <result column="start_time" property="start_time" jdbcType="VARCHAR"/>
        <result column="time" property="time" jdbcType="VARCHAR"/>
        <result column="range" property="range" jdbcType="VARCHAR"/>
        <result column="focus" property="focus" jdbcType="INTEGER"/>
        <result column="buy_num" property="buy_num" jdbcType="INTEGER"/>
        <result column="introduction" property="introduction" jdbcType="VARCHAR"/>
        <association property="courseDirection" column="direction_id" javaType="entity.CourseClass"
                     select="dao.CourseClassMapper.selectByPrimaryKey"/>
        <association property="teacher" column="tid" javaType="entity.Teacher"
                     select="dao.TeacherMapper.selectByPrimaryKey"/>
        <collection property="chapters" column="id" javaType="ArrayList" ofType="entity.Chapter"
                    select="dao.ChapterMapper.selectByCourseId">
        </collection>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from course
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <insert id="insert" parameterType="entity.Course">
        insert into course (id, cname, direction_id, isfress, course_path,
                            price, pic, course_status, buy_num, `range`)
        values (#{id,jdbcType=INTEGER}, #{cname,jdbcType=VARCHAR}, ${courseDirection.id}, #{isfress,jdbcType=INTEGER},
                #{course_path}
                    #{price,jdbcType=DOUBLE}, #{pic,jdbcType=VARCHAR}, #{courseStatus,jdbcType=INTEGER}, #{buy_num},
                #{range})
    </insert>
    <update id="updateByPrimaryKey" parameterType="entity.Course">
        update course
        set cname         = #{cname,jdbcType=VARCHAR},
            direction_id  = ${courseDirection.id},
            course_path=#{course_path},
            isfress       = #{isfress,jdbcType=INTEGER},
            price         = #{price,jdbcType=DOUBLE},
            pic           = #{pic,jdbcType=VARCHAR},
            course_status = #{courseStatus,jdbcType=INTEGER},
            tid=#{tid},
            start_time=#{start_time},
            time=#{time},
            focus=#{focus},
            introduction=#{introduction},
            buy_num=#{buy_num},
            range=#{range}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id,
               cname,
               direction_id,
               course_path,
               isfress,
               price,
               pic,
               course_status,
               tid,
               start_time,
               time,
               focus,
               introduction,
               buy_num,
               `range`
        from course
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               cname,
               direction_id,
               course_path,
               isfress,
               price,
               pic,
               course_status,
               tid,
               start_time,
               time,
               focus,
               introduction,
               buy_num,
               `range`
        from course
    </select>

    <select id="selectCourseIndex" resultMap="BaseResultMap">
        select *
        from course
        where course_status = 1;
    </select>


    <!--    根据tid查找课程-->
    <select id="selectByTid" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select id,
               cname,
               direction_id,
               course_path,
               isfress,
               price,
               pic,
               course_status,
               start_time,
               time,
               focus,
               introduction,
               buy_num,
               `range`
        from course
        where tid = #{id,jdbcType=INTEGER}
        order by focus desc
    </select>


    <!--    用户收藏的课程-->
    <select id="selectUerCourseCollect" parameterType="int" resultMap="BaseResultMap">
        select course.id,
               course.cname,
               course.direction_id,
               course.course_path,
               course.isfress,
               course.price,
               course.pic,
               course.course_status,
               course.tid,
               course.start_time,
               course.time,
               course.focus,
               course.introduction,
               course.buy_num,
               course.`range`
        FROM `user`,
             user_course,
             course
        WHERE `user`.id = user_course.user_id
          and course.id = user_course.course_id
          AND user_course.collect_status = TRUE
          AND `user`.id = #{id};
    </select>

    <!--    用户购买的课程-->
    <select id="selectUserCourseBuy" parameterType="int" resultMap="BaseResultMap">
        select course.id,
               course.cname,
               course.direction_id,
               course.course_path,
               course.isfress,
               course.price,
               course.pic,
               course.course_status,
               course.tid,
               course.start_time,
               course.time,
               course.focus,
               course.introduction,
               course.buy_num,
               course.`range`
        FROM `user`,
             user_course,
             course
        WHERE `user`.id = user_course.user_id
          and course.id = user_course.course_id
          AND user_course.buy_status = TRUE
          AND `user`.id = #{id};
    </select>


    <!--    查找对应方向的课程-->
    <select id="selectCourseByDirection" parameterType="entity.Course" resultMap="BaseResultMap">
        select *
        from course
        <trim prefix="where" prefixOverrides="and | or">
            <if test="courseDirection.id !=0">
                direction_id=${courseDirection.id}
            </if>
        </trim>
    </select>


    <select id="selectCourseByDirectionAndTid" parameterType="entity.Course" resultMap="BaseResultMap">
        select *
        from course
        <trim prefix="where" prefixOverrides="and | or">
            true
            <if test="courseDirection.id !=0">
                and direction_id=${courseDirection.id}
            </if>
            <if test="teacher.id !=0">
                and tid=${teacher.id}
            </if>
            <if test="isfress!=null">
                and isfress = 0
            </if>
            <if test="focus!=null">
                order by focus desc
            </if>
            <if test="price!=null">
                order by price desc
            </if>
            <if test="buy_num!=null">
                order by buy_num desc
            </if>
            <if test="start_time!=null">
                ORDER BY STR_TO_DATE(start_time,'%Y/%m/%d') DESC
            </if>
        </trim>
    </select>


    <!--    查找对应方向的课程-->
    <select id="selectCourseByDirectionRecommend" parameterType="entity.Course" resultMap="BaseResultMap">
        select *
        from course
        where direction_id = #{oid}
          and id != #{mid}
        limit 4;
    </select>

    <select id="juifyCourseIsOrNotBuy" resultType="int">
        select count(*)
        from user_course
        where user_id = #{uid}
          and course_id = #{cid}
          and buy_status = true
    </select>

    <update id="coursefocusDel">
        update course
        set focus
                =focus - 1
        where id = #{cid};
    </update>

    <update id="coursefocusAdd">
        update course
        set focus
                =focus + 1
        where id = #{cid};
    </update>

</mapper>