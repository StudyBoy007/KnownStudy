<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="dao.OrderMapper">
    <resultMap id="BaseResultMap" type="entity.Order">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="course_count" property="courseCount" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="price_total" property="priceTotal" jdbcType="DOUBLE"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <collection property="courses" javaType="ArrayList" ofType="Course">
            <id column="courseid" property="id" jdbcType="INTEGER"/>
            <result column="cname" property="cname" jdbcType="VARCHAR"/>
            <result column="isfress" property="isfress" jdbcType="INTEGER"/>
            <result column="price" property="price" jdbcType="DOUBLE"/>
            <result column="pic" property="pic" jdbcType="VARCHAR"/>
            <result column="course_path" property="course_path" jdbcType="VARCHAR"/>
            <result column="course_status" property="courseStatus" jdbcType="INTEGER"/>
            <result column="start_time" property="start_time" jdbcType="VARCHAR"/>
            <result column="time" property="time" jdbcType="VARCHAR"/>
            <result column="focus" property="focus" jdbcType="INTEGER"/>
            <result column="buy_num" property="buy_num" jdbcType="INTEGER"/>
            <result column="introduction" property="introduction" jdbcType="VARCHAR"/>
            <association property="courseDirection" column="direction_id" javaType="entity.CourseClass"
                         select="dao.CourseClassMapper.selectByPrimaryKey"/>
        </collection>
    </resultMap>


    <resultMap id="BaseResultMap1" type="entity.Order">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="course_count" property="courseCount" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="price_total" property="priceTotal" jdbcType="DOUBLE"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
    </resultMap>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from order
        where id = #{id,jdbcType=INTEGER}
    </delete>

    <!--        <selectKey keyProperty="id" order="AFTER" resultType="int">-->
    <!--            select last_insert_id() as id;-->
    <!--        </selectKey>-->

    <!--    <insert id="insert" parameterType="entity.Order">-->
    <!--        insert into order (course_count, status,-->
    <!--                           price_total, user_id)-->
    <!--        values (#{courseCount}, #{status},-->
    <!--                #{priceTotal}, #{userId})-->
    <!--    </insert>-->
    <insert id="insert" parameterType="entity.Order">
        <selectKey keyProperty="id" order="AFTER" resultType="int">
            select last_insert_id() as id;
        </selectKey>
        INSERT INTO `order`(course_count, STATUS, price_total, user_id)
        VALUES (#{courseCount}, #{status}, #{priceTotal}, #{userId})
    </insert>


    <update id="updateByPrimaryKey" parameterType="entity.Order">
        update order

        set course_count = #{courseCount,jdbcType=INTEGER},
            status       = #{status},
            price_total  = #{priceTotal,jdbcType=DOUBLE},
            user_id      = #{userId,jdbcType=INTEGER}
        where id = #{id,jdbcType=INTEGER}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap1" parameterType="java.lang.Integer">
        select id, course_count, status, price_total, user_id
        from order
        where id = #{id,jdbcType=INTEGER}
    </select>
    <select id="selectAll" resultMap="BaseResultMap1">
        select id, course_count, status, price_total, user_id
        from order
    </select>

    <select id="selectUserAllOrder" resultMap="BaseResultMap">
        select o.*,
               c.id AS courseid,
               cname,
               course_path,
               direction_id,
               isfress,
               course_status,
               price,
               pic,
               tid,
               focus,
               start_time,
               time,
               introduction,
               buy_num
        FROM `order` o
                 INNER JOIN order_course m ON o.id = m.oid
                 INNER JOIN course c ON c.id = m.cid AND o.user_id = #{id} AND o.`right` = FALSE
            and o.status = #{status};
    </select>


    <insert id="insertMiddle">
        INSERT INTO order_course(oid, cid)
        VALUES
        <foreach collection="courses" item="emp" separator=",">
            (#{oid},#{emp})
        </foreach>
    </insert>

    <select id="selectCourseInOrder" resultType="int">
        select COUNT(*)
        FROM `order` o
                 INNER JOIN order_course m
                            ON o.id = m.oid and o.user_id = #{uid} AND m.cid = #{cid} AND o.`right` = FALSE;
    </select>


    <delete id="deleteOrderBatch" parameterType="list">
        delete from `order` where id in
        <foreach collection="orderIds" item="orderId" separator="," open="(" close=")">
            #{orderId}
        </foreach>
    </delete>

    <update id="changeOrderRightByAdmin" parameterType="int">
        update `order`
        set `right`= true
        where id = #{oid}
    </update>
</mapper>